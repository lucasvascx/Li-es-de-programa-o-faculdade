{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMjbmNAzhCrqMFceh2YCuDF",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/lucasvascx/Li-es-de-programa-o-faculdade/blob/main/Untitled3.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "cellView": "form",
        "id": "RayekxI_rotk"
      },
      "outputs": [],
      "source": [
        "# @title Login e Senha simples\n",
        "variable_name = \"\"\n",
        "import random\n",
        "import time\n",
        "\n",
        "# Base de dados fictícia\n",
        "usuarios = {\n",
        "    \"usuario1\": {\"senha\": \"senha123\", \"telefone\": \"1234567890\"},\n",
        "    \"usuario2\": {\"senha\": \"senha456\", \"telefone\": \"0987654321\"}\n",
        "}\n",
        "\n",
        "# Função para validar login e senha\n",
        "def validar_login(login, senha):\n",
        "    if login in usuarios and usuarios[login][\"senha\"] == senha:\n",
        "        return True\n",
        "    return False\n",
        "\n",
        "# Função para gerar código de validação\n",
        "def gerar_codigo():\n",
        "    return random.randint(100000, 999999)\n",
        "\n",
        "# Função para enviar SMS (simulado)\n",
        "def enviar_sms(telefone, codigo):\n",
        "    print(f\"Enviando SMS para {telefone}: Código de validação é {codigo}\")\n",
        "\n",
        "# Função principal de login\n",
        "def login():\n",
        "    login = input(\"Login: \")\n",
        "    senha = input(\"Senha: \")\n",
        "\n",
        "    if validar_login(login, senha):\n",
        "        codigo = gerar_codigo()\n",
        "        enviar_sms(usuarios[login][\"telefone\"], codigo)\n",
        "\n",
        "        # Define o tempo limite (em segundos)\n",
        "        tempo_limite = 30\n",
        "        tempo_inicial = time.time()\n",
        "\n",
        "        while True:\n",
        "            tempo_decorrido = time.time() - tempo_inicial\n",
        "            tempo_restante = tempo_limite - int(tempo_decorrido)\n",
        "\n",
        "            if tempo_restante <= 0:\n",
        "                print(\"Tempo limite para inserção do código expirado!\")\n",
        "                codigo_digitado = input(\"Digite o código de validação recebido por SMS: \")\n",
        "                if codigo_digitado.isdigit() and int(codigo_digitado) == codigo:\n",
        "                    print(\"Código correto, mas inserido após o tempo limite. Login não autorizado!\")\n",
        "                else:\n",
        "                    print(\"Código incorreto e inserido após o tempo limite. Login não autorizado!\")\n",
        "                return\n",
        "\n",
        "            print(f\"Tempo restante: {tempo_restante} segundos\", end='\\r')\n",
        "            time.sleep(1)\n",
        "\n",
        "            if tempo_restante > 0:\n",
        "                codigo_digitado = input(\"Digite o código de validação recebido por SMS: \")\n",
        "                tempo_decorrido = time.time() - tempo_inicial\n",
        "                if tempo_decorrido > tempo_limite:\n",
        "                    print(\"Tempo limite para inserção do código expirado!\")\n",
        "                    if codigo_digitado.isdigit() and int(codigo_digitado) == codigo:\n",
        "                        print(\"Código correto, mas inserido após o tempo limite. Login não autorizado!\")\n",
        "                    else:\n",
        "                        print(\"Código incorreto e inserido após o tempo limite. Login não autorizado!\")\n",
        "                    return\n",
        "                elif codigo_digitado.isdigit() and int(codigo_digitado) == codigo:\n",
        "                    print(\"Login realizado com sucesso!\")\n",
        "                    return\n",
        "                else:\n",
        "                    print(\"Código incorreto. Tente novamente.\")\n",
        "                    # Opcional: Adicionar uma pequena pausa para evitar tentativas rápidas\n",
        "                    time.sleep(1)\n",
        "\n",
        "    else:\n",
        "        print(\"Login e/ou Senha incorretos\")\n",
        "\n",
        "# Executar função de login\n",
        "login()"
      ]
    }
  ]
}
